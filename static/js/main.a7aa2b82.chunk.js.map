{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","filteredUsers","setFilteredUsers","useEffect","axios","get","then","data","results","className","style","textAlign","onChange","event","val","filtered","filter","user","name","first","toLowerCase","includes","last","phone","handleFilter","target","value","margin","width","placeholder","class","scope","map","src","picture","thumbnail","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAyDeA,MAtDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAE6BF,mBAAS,IAFtC,mBAENG,EAFM,KAESC,EAFT,KAqBb,OAlBAC,qBAAU,WACRC,IAAMC,IAAI,iDACPC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPP,EAASO,EAAKC,SACdN,EAAiBK,EAAKC,cAEzB,IAaD,qCACE,qBAAKC,UAAU,YAAf,SACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,kCAEF,uBAAOC,SAAU,SAACC,GAAD,OAfA,SAAAC,GAEnB,IAAMC,EAAWhB,EAAMiB,QAAO,SAAAC,GAC5B,OAAOA,EAAKC,KAAKC,MAAMC,cAAcC,SAASP,IAAQG,EAAKC,KAAKI,KAAKF,cAAcC,SAASP,IAAQG,EAAKM,MAAMF,SAASP,MAG1HZ,EAAiBa,GASaS,CAAaX,EAAMY,OAAOC,MAAMN,gBAAgBX,UAAU,oBAAoBC,MAAO,CAAEiB,OAAQ,OAAQC,MAAO,OAASC,YAAY,uBAC/J,qBAAKpB,UAAU,YAAf,SACE,wBAAOqB,MAAM,mBAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACG9B,EAAc+B,KAAI,SAAAf,GAAI,OAAI,+BACzB,oBAAIc,MAAM,MAAV,SAAgB,qBAAKE,IAAKhB,EAAKiB,QAAQC,cACvC,6BAAKlB,EAAKC,KAAKC,QACf,6BAAKF,EAAKC,KAAKI,OACf,6BAAKL,EAAKmB,QACV,6BAAKnB,EAAKM,yBCnCTc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a7aa2b82.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api/?results=100&nat=us\")\n      .then(({ data }) => {\n        setUsers(data.results)\n        setFilteredUsers(data.results)\n      });\n  }, []);\n\n  const handleFilter = val => {\n    //get a filtered array based on users array and the typed val\n    const filtered = users.filter(user => {\n      return user.name.first.toLowerCase().includes(val) || user.name.last.toLowerCase().includes(val) || user.phone.includes(val)\n    });\n    //set the users state to the filtered array of values\n    setFilteredUsers(filtered)\n  }\n\n\n  return (\n    <>\n      <div className=\"jumbotron\">\n        <h1 style={{ textAlign: \"center\" }}>Employee Directory</h1>\n      </div>\n      <input onChange={(event) => handleFilter(event.target.value.toLowerCase())} className=\"form-control mb-5\" style={{ margin: \"auto\", width: \"50%\" }} placeholder=\"Search an employee\" />\n      <div className=\"container\">\n        <table class=\"table table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Picture</th>\n              <th scope=\"col\">First</th>\n              <th scope=\"col\">Last</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredUsers.map(user => <tr>\n              <th scope=\"row\"><img src={user.picture.thumbnail} /></th>\n              <td>{user.name.first}</td>\n              <td>{user.name.last}</td>\n              <td>{user.email}</td>\n              <td>{user.phone}</td>\n            </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}